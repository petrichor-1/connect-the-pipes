Import "secretblocks.htn"

_defineBlockType operator(Number) ae 22 "None" 42 _ "â‰«" "", 

custom_rule ðŸŽ®ae_mod_interface:
	Self.ðŸ“£button_pressed = join(Self.name, with: ": controller button pressed with index ")
	Self.ðŸ“£button_unpressed = join(Self.name, with: ": controller button released with index ")
	is_currently_pressed = "false"
	When game_starts:
		check_once_if(Self.total_clones == 1):
			check_if_else(ae("_ae_webplayer_action: {\"name\": \"isWebExp\"}") == 1):
				Self.ðŸŽ®controllers_supported = "true"
				create_clones_of_this_object(times: 17)
			else:
				Self.ðŸŽ®controllers_supported = "false"
	When ae(join("_ae_webplayer_action: {
	\"name\": \"checkControllerButton\",
	\"args\": [
	  0,
	  2,
	  [", with: join(Self.clone_index, with: "]
	]
  }"))) == 1:
		check_once_if(is_currently_pressed != "true"):
			is_currently_pressed = "true"
			broadcast_message(named: join(Self.ðŸ“£button_pressed, with: Self.clone_index))
	When ae(join("_ae_webplayer_action: {
		\"name\": \"checkControllerButton\",
		\"args\": [
			0,
			2,
			[", with: join(Self.clone_index, with: "]
		]
	}"))) != 1:
		check_once_if(is_currently_pressed == "true"):
			is_currently_pressed = "false"
			broadcast_message(named: join(Self.ðŸ“£button_unpressed, with: Self.clone_index))
	When Self.clone_index == 0:
		Self.ðŸŽ®lx = ae("_ae_webplayer_action: {
			\"name\": \"checkControllerAxis\",
			\"args\": [0,0]
		}")
		Self.ðŸŽ®ly = -1 * ae("_ae_webplayer_action: {
			\"name\": \"checkControllerAxis\",
			\"args\": [0,1]
		}")
		Self.ðŸŽ®rx = ae("_ae_webplayer_action: {
			\"name\": \"checkControllerAxis\",
			\"args\": [0,2]
		}")
		Self.ðŸŽ®ry = -1 * ae("_ae_webplayer_action: {
			\"name\": \"checkControllerAxis\",
			\"args\": [0,3]
		}")